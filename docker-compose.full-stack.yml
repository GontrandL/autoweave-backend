version: '3.8'

# This extends the base docker-compose.yml with monitoring and optional services
services:
  # Core services from docker-compose.yml
  redis:
    extends:
      file: docker-compose.yml
      service: redis

  neo4j:
    extends:
      file: docker-compose.yml
      service: neo4j

  qdrant:
    extends:
      file: docker-compose.yml
      service: qdrant

  autoweave-backend:
    extends:
      file: docker-compose.yml
      service: autoweave-backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - METRICS_PORT=9090
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Neo4j
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      # Qdrant
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      # AutoWeave Core (when available)
      - AUTOWEAVE_CORE_URL=http://autoweave-core:3000
      - AUTOWEAVE_CORE_WS_URL=ws://autoweave-core:3000/ws
      - ANP_SERVER_URL=http://autoweave-core:8083
      # Monitoring
      - PROMETHEUS_ENABLED=true
      - GRAFANA_ENABLED=true
      # Tracing
      - TRACING_ENABLED=true
      - TRACING_ENDPOINT=http://jaeger:14268/api/traces

  # AutoWeave Core (optional - comment out if not available)
  # autoweave-core:
  #   image: autoweave/core:latest
  #   container_name: autoweave-core
  #   ports:
  #     - "3000:3000"
  #     - "8083:8083"
  #   environment:
  #     - NODE_ENV=production
  #   networks:
  #     - autoweave-network
  #   restart: unless-stopped

  # Monitoring Stack from docker-compose.monitoring.yml
  prometheus:
    extends:
      file: docker-compose.monitoring.yml
      service: prometheus
    networks:
      - autoweave-network

  grafana:
    extends:
      file: docker-compose.monitoring.yml
      service: grafana
    networks:
      - autoweave-network

  alertmanager:
    extends:
      file: docker-compose.monitoring.yml
      service: alertmanager
    networks:
      - autoweave-network

  node-exporter:
    extends:
      file: docker-compose.monitoring.yml
      service: node-exporter
    networks:
      - autoweave-network

  # Additional Optional Services

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: autoweave-jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # UI
      - "14268:14268"  # Collector
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - autoweave-network
    restart: unless-stopped

  # Elasticsearch for logs (optional)
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
  #   container_name: autoweave-elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data
  #   networks:
  #     - autoweave-network
  #   restart: unless-stopped

  # Kibana for log visualization (optional)
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.11.0
  #   container_name: autoweave-kibana
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - autoweave-network
  #   restart: unless-stopped

volumes:
  # Core volumes
  redis-data:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins:
  qdrant-data:
  
  # Monitoring volumes
  prometheus-data:
  grafana-data:
  alertmanager-data:
  
  # Optional service volumes
  elasticsearch-data:
    driver: local

networks:
  autoweave-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16